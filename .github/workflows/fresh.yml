name: Fresh Build
on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Citadel Build ${{ matrix.plans.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        plans: [ {targetPlatform: StandaloneOSX, dockerImage: mac-mono}, {targetPlatform: StandaloneWindows64, dockerImage: windows-mono}, {targetPlatform: StandaloneLinux64, dockerImage: linux-il2cpp} ] 
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Run custom image build
        run: |
          echo "${{ secrets.DOCKER_TOKEN }}" | docker login --username "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          chmod +x ./build.sh
          ./build.sh push_docker
      - name: Build game
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.plans.targetPlatform }}
          versioning: Semantic
          customImage: josiahjack/citadel-ci:ubuntu-2020.3.48f1-${{ matrix.plans.dockerImage }}-3
          allowDirtyBuild: true

      - name: Upload built files
        uses: actions/upload-artifact@v4
        with:
          name: Citadel_DevBuild_${{ matrix.plans.targetPlatform }}
          path: build/${{ matrix.plans.targetPlatform }}
          if-no-files-found: error
