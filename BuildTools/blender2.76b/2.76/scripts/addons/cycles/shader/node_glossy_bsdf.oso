OpenShadingLanguage 1.00
# Compiled by oslc 1.5.11
shader node_glossy_bsdf
param	color	Color	0.80000001 0.80000001 0.80000001 		 %read{4,14} %write{2147483647,-1}
param	string	distribution	"GGX" 		 %read{1,9} %write{2147483647,-1}
param	float	Roughness	0.2 		 %read{7,13} %write{2147483647,-1}
param	normal	Normal	0 0 0 		 %read{3,13} %write{0,0}
oparam	closure color	BSDF			 %read{2147483647,-1} %write{4,14}
global	normal	N	 %read{0,0} %write{2147483647,-1}
const	string	$const1	"Sharp"		 %read{1,1} %write{2147483647,-1}
temp	int	$tmp1	 %read{2,2} %write{1,1}
temp	closure color	$tmp2	 %read{4,4} %write{3,3}
const	string	$const2	"reflection"		 %read{3,3} %write{2147483647,-1}
const	string	$const3	"Beckmann"		 %read{5,5} %write{2147483647,-1}
temp	int	$tmp3	 %read{6,6} %write{5,5}
temp	closure color	$tmp4	 %read{8,8} %write{7,7}
const	string	$const4	"microfacet_beckmann"		 %read{7,7} %write{2147483647,-1}
const	string	$const5	"GGX"		 %read{9,9} %write{2147483647,-1}
temp	int	$tmp5	 %read{10,10} %write{9,9}
temp	closure color	$tmp6	 %read{12,12} %write{11,11}
const	string	$const6	"microfacet_ggx"		 %read{11,11} %write{2147483647,-1}
temp	closure color	$tmp7	 %read{14,14} %write{13,13}
const	vector	$const7	0 0 0		 %read{13,13} %write{2147483647,-1}
const	string	$const8	"ashikhmin_shirley"		 %read{13,13} %write{2147483647,-1}
code Normal
# intern/cycles/kernel/shaders/node_glossy_bsdf.osl:24
# 	normal Normal = N,
	assign		Normal N 	%filename{"intern/cycles/kernel/shaders/node_glossy_bsdf.osl"} %line{24} %argrw{"wr"}
code ___main___
# intern/cycles/kernel/shaders/node_glossy_bsdf.osl:27
# 	if (distribution == "Sharp")
	eq		$tmp1 distribution $const1 	%filename{"intern/cycles/kernel/shaders/node_glossy_bsdf.osl"} %line{27} %argrw{"wrr"}
	if		$tmp1 5 15 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_glossy_bsdf.osl:28
# 		BSDF = Color * reflection(Normal);
	closure		$tmp2 $const2 Normal 	%line{28} %argrw{"wrr"}
	mul		BSDF $tmp2 Color 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_glossy_bsdf.osl:29
# 	else if (distribution == "Beckmann")
	eq		$tmp3 distribution $const3 	%line{29} %argrw{"wrr"}
	if		$tmp3 9 15 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_glossy_bsdf.osl:30
# 		BSDF = Color * microfacet_beckmann(Normal, Roughness);
	closure		$tmp4 $const4 Normal Roughness 	%line{30} %argrw{"wrrr"}
	mul		BSDF $tmp4 Color 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_glossy_bsdf.osl:31
# 	else if (distribution == "GGX")
	eq		$tmp5 distribution $const5 	%line{31} %argrw{"wrr"}
	if		$tmp5 13 15 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_glossy_bsdf.osl:32
# 		BSDF = Color * microfacet_ggx(Normal, Roughness);
	closure		$tmp6 $const6 Normal Roughness 	%line{32} %argrw{"wrrr"}
	mul		BSDF $tmp6 Color 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_glossy_bsdf.osl:34
# 		BSDF = Color * ashikhmin_shirley(Normal, vector(0, 0, 0), Roughness, Roughness);
	closure		$tmp7 $const8 Normal $const7 Roughness Roughness 	%line{34} %argrw{"wrrrrr"}
	mul		BSDF $tmp7 Color 	%argrw{"wrr"}
	end
